{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Python基礎 解答例\n",
    "課題や練習問題についての解答例を記載します。  \n",
    "あくまでも解答例となります。  \n",
    "プログラムの書き方は人それぞれです。同じ回答でも同じ処理をしているとは限りません。  \n",
    "各々が正しいと思った書き方で書くのは自由です。  \n",
    "重要なことはなぜそのように記述したか、を説明できることだと思います。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 課題1　解答例"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "a=456  \n",
    "b=0  \n",
    "c=0  \n",
    "\n",
    "aの変数をもとに   \n",
    "aに100の位  \n",
    "bに10の位  \n",
    "cに1の位  \n",
    "になるように入れて、出力してみてください。  \n",
    "\n",
    "コメントにヒントがありますのでそれに沿って記述してみましょう"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "a=456\n",
    "b=0\n",
    "c=0\n",
    "\n",
    "c = a % 10 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "b = (a - c) // 10 % 10 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "a = (a - b*10 -c) // 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(a)\n",
    "print(b)\n",
    "print(c)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 練習問題1 解答例"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "aとbの値を入れ替えるプログラム(swapプログラム)を作成  \n",
    "a=10  \n",
    "b=3  \n",
    "c=0  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "a = 10\n",
    "b = 3\n",
    "c = 0\n",
    "\n",
    "c = a\n",
    "a = b\n",
    "b = c\n",
    "\n",
    "\n",
    "print(\"a = \" +str(a))\n",
    "print(\"b = \" +str(b))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 練習問題2 解答例"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "入力されたxに関して、x/2を出力するプログラムの作成。  \n",
    "ただし、割り切れない場合は繰り上げること。  \n",
    "<実行例>\n",
    "\n",
    "数字を入力してください: 8  \n",
    "(省略)  \n",
    "xの半分の値(繰り上げ)は 4 です。  \n",
    "  \n",
    "  \n",
    "数字を入力してください: 9  \n",
    "(省略)  \n",
    "xの半分の値(繰り上げ)は 5 です。  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "数字を入力してください: 7\n",
      "xの半分の値(繰り上げ)は 4 です。\n"
     ]
    }
   ],
   "source": [
    "x = input('数字を入力してください: ')\n",
    "x = int(x)\n",
    "\n",
    "if x%2==0 :\n",
    "\tx=x//2\n",
    "elif x%2==1 :\n",
    "\tx=x//2+1\n",
    "print(\"xの半分の値(繰り上げ)は \" +str(int(x))+ \" です。\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 課題 2\n",
    "FizzBuzzプログラムを作成。  \n",
    "FizzBuzzゲームの遊び方  \n",
    "1から順番に数字を言っていきます。  \n",
    "ただし、  \n",
    "     3で割り切れる場合はFizz、  \n",
    "     5で割り切れる場合はBuzz  \n",
    "     両方で割り切れる場合はFizzBuzz  \n",
    "と言って下さい。  \n",
    "いくつまで言うかは最初に入力します。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "数字を入力してください30\n",
      "1\n",
      "2\n",
      "fizz!\n",
      "4\n",
      "buzz!\n",
      "fizz!\n",
      "7\n",
      "8\n",
      "fizz!\n",
      "buzz!\n",
      "11\n",
      "fizz!\n",
      "13\n",
      "14\n",
      "fizzbuzz!\n",
      "16\n",
      "17\n",
      "fizz!\n",
      "19\n",
      "buzz!\n",
      "fizz!\n",
      "22\n",
      "23\n",
      "fizz!\n",
      "buzz!\n",
      "26\n",
      "fizz!\n",
      "28\n",
      "29\n"
     ]
    }
   ],
   "source": [
    "x = input ('数字を入力してください')\n",
    "x = int (x)\n",
    "\n",
    "for i in range (1,x) :\n",
    "    if i % 15 == 0 :\n",
    "        print (\"fizzbuzz!\")\n",
    "    elif i % 5 == 0 :\n",
    "        print (\"buzz!\")\n",
    "    elif i % 3 == 0 :\n",
    "        print (\"fizz!\")\n",
    "    else:\n",
    "        print (i)\n",
    "    x = x + 1\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 練習問題3 解答例\n",
    "下記の最大値を出力するプログラムを参考に、target のリストの中から最大値と2番目に大きい数字を出力するプログラムを作成してください。\n",
    "```\n",
    "max = 0  \n",
    "target = [5,4,2,6,9,1,2,3,10,2,5]  \n",
    "for n in target:  \n",
    "    if n > max :  \n",
    "        max = n  \n",
    "print(\"最大値は \" +max+ \" です\")  \n",
    "``` \n",
    "  \n",
    "---実行例---  \n",
    "最大値は 10 です。\n",
    "2番目に大きい数字は 9 です。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "target = [5,4,2,6,9,1,2,3,10,2,5]  \n",
    "max=0\n",
    "max2=0\n",
    "\n",
    "for n in target :\n",
    "    if n> max:\n",
    "        max=n\n",
    "        for n in target:\n",
    "            if n>max and max>max2 :\n",
    "                max2 = max\n",
    "        else:\n",
    "            if n>max2:\n",
    "                max2=n\n",
    "\n",
    "print(\"最大値は \"+str(max)+\" です。\")\n",
    "print(\"2番目に大きい数字は \"+str(max2)+\" です。\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
